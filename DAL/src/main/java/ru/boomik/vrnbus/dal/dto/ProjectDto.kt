/*
 * Anonymous API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package ru.boomik.vrnbus.dal.dto

import com.google.gson.annotations.SerializedName
import kotlinx.serialization.Serializable
import java.util.*

/**
 * ProjectDto
 */
@Serializable
class ProjectDto {
    /**
     * Get id
     *
     * @return id
     */
    @SerializedName("id")
    var id: Int? = null

    /**
     * Get name
     *
     * @return name
     */
    @SerializedName("name")
    var name: String? = null

    /**
     * Get director
     *
     * @return director
     */
    @SerializedName("director")
    var director: String? = null
    fun id(id: Int?): ProjectDto {
        this.id = id
        return this
    }

    fun name(name: String?): ProjectDto {
        this.name = name
        return this
    }

    fun director(director: String?): ProjectDto {
        this.director = director
        return this
    }

    override fun equals(o: Any?): Boolean {
        if (this === o) {
            return true
        }
        if (o == null || javaClass != o.javaClass) {
            return false
        }
        val projectDto = o as ProjectDto
        return id == projectDto.id &&
                name == projectDto.name &&
                director == projectDto.director
    }

    override fun hashCode(): Int {
        return Objects.hash(id, name, director)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class ProjectDto {\n")
        sb.append("    id: ").append(toIndentedString(id)).append("\n")
        sb.append("    name: ").append(toIndentedString(name)).append("\n")
        sb.append("    director: ").append(toIndentedString(director)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}