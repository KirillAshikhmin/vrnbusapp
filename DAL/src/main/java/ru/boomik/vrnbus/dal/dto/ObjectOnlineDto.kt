/*
 * Anonymous API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package ru.boomik.vrnbus.dal.dto

import com.google.gson.annotations.SerializedName
import java.time.OffsetDateTime
import java.util.*

/**
 * ObjectOnlineDto
 */
class ObjectOnlineDto {
    @SerializedName("averageSpeed")
    private val averageSpeed: Double? = null
    @SerializedName("minutesLeftToBusStop")
    private val minutesLeftToBusStop: Double? = null
    @SerializedName("id")
    private val id: Int? = null
    @SerializedName("name")
    private val name: String? = null
    @SerializedName("objId")
    private val objId: Int? = null
    @SerializedName("lastTime")
    private val lastTime: OffsetDateTime? = null
    @SerializedName("lastLongitude")
    private val lastLongitude: Double? = null
    @SerializedName("lastLatitude")
    private val lastLatitude: Double? = null
    @SerializedName("lastSpeed")
    private val lastSpeed: Int? = null
    @SerializedName("projectId")
    private val projectId: Int? = null
    @SerializedName("lastStationId")
    private val lastStationId: Int? = null
    @SerializedName("lastStationTime")
    private val lastStationTime: OffsetDateTime? = null
    @SerializedName("lastRouteId")
    private val lastRouteId: Int? = null
    @SerializedName("carTypeId")
    private val carTypeId: Int? = null
    @SerializedName("azimuth")
    private val azimuth: Int? = null
    @SerializedName("providerId")
    private val providerId: Int? = null
    @SerializedName("carBrandId")
    private val carBrandId: Int? = null
    @SerializedName("userComment")
    private val userComment: String? = null
    @SerializedName("dateInserted")
    private val dateInserted: OffsetDateTime? = null
    @SerializedName("objectOutput")
    private val objectOutput: Boolean? = null
    @SerializedName("objectOutputDate")
    private val objectOutputDate: OffsetDateTime? = null
    @SerializedName("phone")
    private val phone: Long? = null
    @SerializedName("yearRelease")
    private val yearRelease: Int? = null
    @SerializedName("dispRouteId")
    private val dispRouteId: Int? = null
    @SerializedName("lastAddInfo")
    private val lastAddInfo: Int? = null
    @SerializedName("lowfloor")
    private val lowfloor: Boolean? = null
    @SerializedName("statusName")
    private val statusName: String? = null
    @SerializedName("carBrand")
    private val carBrand: CarBrandDto? = null
    @SerializedName("provider")
    private val provider: ProviderDto? = null
    @SerializedName("route")
    private val route: RouteDto? = null
    @SerializedName("project")
    private val project: ProjectDto? = null
    @SerializedName("block")
    private val block: GranitDto? = null

    override fun equals(other: Any?): Boolean {
        if (this === other) {
            return true
        }
        if (other == null || javaClass != other.javaClass) {
            return false
        }
        val objectOnlineDto = other as ObjectOnlineDto
        return averageSpeed == objectOnlineDto.averageSpeed &&
                minutesLeftToBusStop == objectOnlineDto.minutesLeftToBusStop &&
                id == objectOnlineDto.id &&
                name == objectOnlineDto.name &&
                objId == objectOnlineDto.objId &&
                lastTime == objectOnlineDto.lastTime &&
                lastLongitude == objectOnlineDto.lastLongitude &&
                lastLatitude == objectOnlineDto.lastLatitude &&
                lastSpeed == objectOnlineDto.lastSpeed &&
                projectId == objectOnlineDto.projectId &&
                lastStationId == objectOnlineDto.lastStationId &&
                lastStationTime == objectOnlineDto.lastStationTime &&
                lastRouteId == objectOnlineDto.lastRouteId &&
                carTypeId == objectOnlineDto.carTypeId &&
                azimuth == objectOnlineDto.azimuth &&
                providerId == objectOnlineDto.providerId &&
                carBrandId == objectOnlineDto.carBrandId &&
                userComment == objectOnlineDto.userComment &&
                dateInserted == objectOnlineDto.dateInserted &&
                objectOutput == objectOnlineDto.objectOutput &&
                objectOutputDate == objectOnlineDto.objectOutputDate &&
                phone == objectOnlineDto.phone &&
                yearRelease == objectOnlineDto.yearRelease &&
                dispRouteId == objectOnlineDto.dispRouteId &&
                lastAddInfo == objectOnlineDto.lastAddInfo &&
                lowfloor == objectOnlineDto.lowfloor &&
                statusName == objectOnlineDto.statusName &&
                carBrand == objectOnlineDto.carBrand &&
                provider == objectOnlineDto.provider &&
                route == objectOnlineDto.route &&
                project == objectOnlineDto.project &&
                block == objectOnlineDto.block
    }

    override fun hashCode(): Int {
        return Objects.hash(averageSpeed, minutesLeftToBusStop, id, name, objId, lastTime, lastLongitude, lastLatitude, lastSpeed, projectId, lastStationId, lastStationTime, lastRouteId, carTypeId, azimuth, providerId, carBrandId, userComment, dateInserted, objectOutput, objectOutputDate, phone, yearRelease, dispRouteId, lastAddInfo, lowfloor, statusName, carBrand, provider, route, project, block)
    }

    override fun toString(): String {
        val sb = StringBuilder()
        sb.append("class ObjectOnlineDto {\n")
        sb.append("    averageSpeed: ").append(toIndentedString(averageSpeed)).append("\n")
        sb.append("    minutesLeftToBusStop: ").append(toIndentedString(minutesLeftToBusStop)).append("\n")
        sb.append("    id: ").append(toIndentedString(id)).append("\n")
        sb.append("    name: ").append(toIndentedString(name)).append("\n")
        sb.append("    objId: ").append(toIndentedString(objId)).append("\n")
        sb.append("    lastTime: ").append(toIndentedString(lastTime)).append("\n")
        sb.append("    lastLongitude: ").append(toIndentedString(lastLongitude)).append("\n")
        sb.append("    lastLatitude: ").append(toIndentedString(lastLatitude)).append("\n")
        sb.append("    lastSpeed: ").append(toIndentedString(lastSpeed)).append("\n")
        sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n")
        sb.append("    lastStationId: ").append(toIndentedString(lastStationId)).append("\n")
        sb.append("    lastStationTime: ").append(toIndentedString(lastStationTime)).append("\n")
        sb.append("    lastRouteId: ").append(toIndentedString(lastRouteId)).append("\n")
        sb.append("    carTypeId: ").append(toIndentedString(carTypeId)).append("\n")
        sb.append("    azimuth: ").append(toIndentedString(azimuth)).append("\n")
        sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n")
        sb.append("    carBrandId: ").append(toIndentedString(carBrandId)).append("\n")
        sb.append("    userComment: ").append(toIndentedString(userComment)).append("\n")
        sb.append("    dateInserted: ").append(toIndentedString(dateInserted)).append("\n")
        sb.append("    objectOutput: ").append(toIndentedString(objectOutput)).append("\n")
        sb.append("    objectOutputDate: ").append(toIndentedString(objectOutputDate)).append("\n")
        sb.append("    phone: ").append(toIndentedString(phone)).append("\n")
        sb.append("    yearRelease: ").append(toIndentedString(yearRelease)).append("\n")
        sb.append("    dispRouteId: ").append(toIndentedString(dispRouteId)).append("\n")
        sb.append("    lastAddInfo: ").append(toIndentedString(lastAddInfo)).append("\n")
        sb.append("    lowfloor: ").append(toIndentedString(lowfloor)).append("\n")
        sb.append("    statusName: ").append(toIndentedString(statusName)).append("\n")
        sb.append("    carBrand: ").append(toIndentedString(carBrand)).append("\n")
        sb.append("    provider: ").append(toIndentedString(provider)).append("\n")
        sb.append("    route: ").append(toIndentedString(route)).append("\n")
        sb.append("    project: ").append(toIndentedString(project)).append("\n")
        sb.append("    block: ").append(toIndentedString(block)).append("\n")
        sb.append("}")
        return sb.toString()
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private fun toIndentedString(o: Any?): String {
        return o?.toString()?.replace("\n", "\n    ") ?: "null"
    }
}